# See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md
# In order to initially set up the config file, symlink this config
# sudo ln -s ~/config/lazygit.yml $HOME/Library/ApplicationSupport/lazygit/config.yml
# ln -s ~/config/lazygit.yml $HOME/.config/lazygit/config.yml
#
# Good intro video from the creator: https://www.youtube.com/watch?v=CPLdltN7wgE

git:
  paging:
    colorArg: always
    pager: delta --paging=never --line-numbers --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"
  overrideGpg: true # Ignore GPG errors as I'm using a GPG agent

os:
  # editCommand: nvr -l -s
  edit: 'nvr -l -s {{filename}}'
  editAtLine: 'nvr -l -s +{{line}} {{filename}}'
  editAtLineAndWait: 'nvr -l -s +{{line}} {{filename}}'
  editInTerminal: true

keybinding:
  universal:
    nextTab: "<c-n>"
  files:
    openStatusFilter: "<c-p>"

gui:
  theme:
    selectedRangeBgColor:
      - bold
      - reverse
  branchColors:
    'main': '#11aaff'
    'master': '#11aaff'
    'develop': '#11aaff'
    'staging': '#11aaff'
    'integration': '#11aaff'
  showIcons: true

customCommands:
  # From https://github.com/jesseduffield/lazygit/issues/2057#issuecomment-1625798497
  # - key: 'C'
  #   context: 'localBranches'
  #   command: 'git switch -c $(echo {{ .Form.Branch }} | sed "s/\(.*\/\)\(.*\/\)\(.*\)/\2\3/") {{.Form.Branch }}'
  #   description: 'Checkout remote branch by name with fuzzy searching'
  #   prompts:
  #     - type: 'input'
  #       title: 'Which branch?'
  #       key: 'Branch'
  #       # FIXME: Suggestions do not work
  #       suggestions:
  #         preset: 'branches'
  - key: 'C'
    command: 'git branch -r | sed "s/origin\///" | fzf --prompt="Select branch: " | xargs -I {} git checkout {}'
    context: 'localBranches'
    subprocess: true
  - key: '<c-p>'
    command: 'git add --patch'
    context: 'files'
    subprocess: true
  - key: "F"
    description: "Fetch and prune"
    command: "git fetch --prune"
    context: "localBranches"
    stream: true
  - key: "<c-r>"
    command: "git reset --hard @{upstream}"
    description: "Reset hard the local branch with its upstream"
    context: "localBranches"
    stream: true
  - key: "<c-u>"
    command: "git reset --soft HEAD^"
    description: "Uncommit selected commit and put the changes back in the working tree"
    context: "commits"
    stream: true
  - key: "<c-f>"
    command: "source $HOME/.zplug/repos/wfxr/forgit/forgit.plugin.zsh && forgit::log"
    description: "Fuzzy find a commit"
    context: "global"
    subprocess: true
  - key: "<c-x>"
    command: "f() { CURRENT=`git rev-parse --abbrev-ref HEAD`; git checkout main; git pull; git branch -d $CURRENT; }; if [[ {{index .PromptResponses 0}} = 'Yes' ]]; then f; else echo Canceled; fi"
    description: "Pull main and delete current branch (after the PR got merged)"
    context: "localBranches"
    stream: true
    loadingText: "Pulling latest main and deleting ..."
    prompts:
      - type: "menu"
        title: "Are you sure you want to delete the current branch?"
        options:
          - value: "Yes"
          - value: "No"
  - key: "<c-f>"
    description: "fetch a remote branch as a new local branch"
    command: "git fetch {{index .SelectedRemote.Name }} {{index .PromptResponses 0}}:{{index .PromptResponses 1}}"
    context: "remotes"
    prompts:
      - type: "input"
        title: "Remote Branch Name"
        initialValue: ""
      - type: "input"
        title: "New Local Branch Name"
        initialValue: ""
    loadingText: "fetching branch"
    # Blame via tig
  - key: b
    command: tig blame -- {{.SelectedFile.Name}}
    context: files
    description: blame file at tree
    subprocess: yes
  - key: b
    command: tig blame {{.SelectedSubCommit.Sha}} -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    description: blame file at revision
    subprocess: yes
  - key: B
    command: tig blame -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    description: blame file at tree
    subprocess: yes
  # File history via tig
  - key: t
    command: tig {{.SelectedSubCommit.Sha}} -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    description: tig file (history of commits affecting file)
    subprocess: yes
  - key: t
    command: tig -- {{.SelectedFile.Name}}
    context: files
    description: tig file (history of commits affecting file)
    subprocess: yes
  # Browse files at revision via tig
  - key: t
    command: tig show {{.SelectedSubCommit.Sha}}
    context: subCommits
    description: tig commit (`t` again to browse files at revision)
    subprocess: yes
  - key: t
    command: tig show {{.SelectedLocalBranch.Name}}
    context: localBranches
    description: tig branch (`t` again to browse files at revision)
    subprocess: yes
  - key: t
    command: tig show {{.SelectedRemoteBranch.RemoteName}}/{{.SelectedRemoteBranch.Name}}
    context: remoteBranches
    description: tig branch (`t` again to browse files at revision)
    subprocess: yes
